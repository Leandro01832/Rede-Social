#pragma checksum "C:\Users\leand\Documents\Visual Studio 2017\C#\cms-rede-social\CMS\wwwroot\Arquivotxt\DocBloco.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eb4f8135e2b6229f4a75182d76f8d62c4ea2116c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.wwwroot_Arquivotxt_DocBloco), @"mvc.1.0.view", @"/wwwroot/Arquivotxt/DocBloco.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/wwwroot/Arquivotxt/DocBloco.cshtml", typeof(AspNetCore.wwwroot_Arquivotxt_DocBloco))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eb4f8135e2b6229f4a75182d76f8d62c4ea2116c", @"/wwwroot/Arquivotxt/DocBloco.cshtml")]
    public class wwwroot_Arquivotxt_DocBloco : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 5349, true);
            WriteLiteral(@"
#foreach($bloco in $divs)

#if($bloco.Div.Tipo == ""DivFixo"" && $bloco.Div.EscolherPosicao == false)

<style>
    #DIV${bloco.Div.Id}Pagina${model.Pagina.Id} 
    {
        display: none;
        position: fixed; 
        right: ${bloco.Div.EixoXBlocoFixado}%;
        top: ${bloco.Div.EixoYBlocoFixado}%;
    }
</style>

#elseif($bloco.Div.Tipo == ""DivFixo"")

<style>
    #DIV${bloco.Div.Id}Pagina${model.Pagina.Id} 
    {
        display: none;
    }
</style>

#else

<style>
    #DIV${bloco.Div.Id}Pagina${model.Pagina.Id} 
    {
       position: relative;
       display: grid;
    }
</style>

#end

#if($bloco.Div.Background.Tipo == ""BackgroundImagem"")
<style>
    #DIV${bloco.Div.Id}Pagina${model.Pagina.Id} {

      background-repeat: ${bloco.Div.Background.Background_Repeat};
        
        grid-template-columns: ${bloco.Div.Colunas};

    padding: ${bloco.Div.Padding}%;
    background-image: url($site$bloco.Div.Background.Imagem.ArquivoImagem);

    border-radiu");
            WriteLiteral(@"s: ${bloco.Div.BorderRadius}px;

    min-height: ${bloco.Div.Height}px;
    height: auto;
    
    
    }
</style>

#elseif($bloco.Div.Background.Tipo == ""BackgroundGradiente"")

  <style>
    #DIV${bloco.Div.Id}Pagina${model.Pagina.Id} {

        #set($um = 1)
         #foreach($Cores in $bloco.Div.Background.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $bloco.Div.Background.Cores.Count())
        background: -moz-linear-gradient(${bloco.Div.Background.Grau}deg,
        #foreach($Cor in $bloco.Div.Background.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

");
            WriteLiteral(@"        background: -webkit-linear-gradient(${bloco.Div.Background.Grau}deg,
        #foreach($Cor in $bloco.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${bloco.Div.Background.Grau}deg,
        #foreach($Cor in $bloco.Div.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);


        
        grid-template-column");
            WriteLiteral(@"s: ${bloco.Div.Colunas};

    padding: ${bloco.Div.Padding}%;    
    border-radius: ${bloco.Div.BorderRadius}px; 
    min-height: ${bloco.Div.Height}px;
    height: auto;
     
    
    }
</style>

#else

<style>
    #DIV${bloco.Div.Id}Pagina${model.Pagina.Id} {
        
        grid-template-columns: ${bloco.Div.Colunas};

    padding: ${bloco.Div.Padding}%;
    background-color: $bloco.Div.Background.Cor;

    border-radius: ${bloco.Div.BorderRadius}px;

    min-height: ${bloco.Div.Height}px;
    height: auto;
    
    
    }
</style>
#end

#end

<div>
    <script type='text/javascript'>
        jQuery(function () {

                $('#Ocultar').click(function () {

                    #foreach($bloco in $divs)
                    $('#DIV${bloco.Div.Id}Pagina${model.Pagina.Id}').css('display', 'block');
                    #end

                });

            $('.Ferramenta').click(function () {

                    #foreach($bloco in $divs)
              ");
            WriteLiteral(@"      #if($bloco.Div.Fixado)
                        $('#DIV${bloco.Div.Id}Pagina${model.Pagina.Id}').css('display', 'none');
                    #end
                    #end

            });


                    #foreach($bloco in $divs) 
                    #if ($bloco.Div.Fixado && $bloco.Div.EscolherPosicao)

                        var header = $('#DIV${bloco.Div.Id}Pagina${model.Pagina.Id}');
                    var sticky = header[0].offsetTop;

                        window.onscroll = function () {
                            if (window.pageYOffset + ${bloco.Div.InicioFixacao} > sticky) {

                        header.addClass('stickyDIV${bloco.Div.Id}Pagina${model.Pagina.Id}');
                    } else
                    {
                        header.removeClass('stickyDIV${bloco.Div.Id}Pagina${model.Pagina.Id}');
                    }
                }
        #end
        #end

        });
    </script>
</div>


#foreach($bloco in $divs)

#if($bloco.Div.F");
            WriteLiteral("ixado && $bloco.Div.EscolherPosicao)\r\n\r\n<style>\r\n    .stickyDIV${bloco.Div.Id}Pagina${model.Pagina.Id} {\r\n        position: fixed;\r\n        top: ${bloco.Div.PosicaoFixacao}%;\r\n        \r\n    }\r\n</style>\r\n\r\n#end\r\n#end\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
