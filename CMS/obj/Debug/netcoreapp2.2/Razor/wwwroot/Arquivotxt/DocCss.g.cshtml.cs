#pragma checksum "C:\Rede-Social-master\Rede-Social\CMS\wwwroot\Arquivotxt\DocCss.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5d790c4290331f134915264895bc7674438c5636"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.wwwroot_Arquivotxt_DocCss), @"mvc.1.0.view", @"/wwwroot/Arquivotxt/DocCss.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/wwwroot/Arquivotxt/DocCss.cshtml", typeof(AspNetCore.wwwroot_Arquivotxt_DocCss))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5d790c4290331f134915264895bc7674438c5636", @"/wwwroot/Arquivotxt/DocCss.cshtml")]
    public class wwwroot_Arquivotxt_DocCss : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 4400, true);
            WriteLiteral(@"#set($site = '')

#if($model.Div1.Container.Background.Tipo == ""BackgroundImagemContainer"")

<style>    

    .content {
        background-image: url($site$model.Div1.Container.Background.Imagem.ArquivoImagem);
    }
</style>

#elseif($model.Div1.Container.Background.Tipo == ""BackgroundGradienteContainer"")

<style>
    .content {

         #set($um = 1)
         #foreach($Cores in $model.Div1.Container.Background.BackgroundGradiente.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.Div1.Container.Background.Cores.Count())
        background: -moz-linear-gradient(${model.Div1.Container.Background.GrauContainer}deg,
        #foreach($Cor in $model.Div1.Container.Background.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Positi");
            WriteLiteral(@"on}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradient(${model.Div1.Container.Background.GrauContainer}deg,
        #foreach($Cor in $model.Div1.Container.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.Div1.Container.Background.GrauContainer}deg,
        #foreach($Cor in $model.Div1.Container.Background.BackgroundGradiente.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            ");
            WriteLiteral(@"#end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }

    #pagina$model.Pagina.Id {

         #set($um = 1)
         #foreach($Cores in $model.Div1.Container.Background.Cores)
         #if($um == 1)
        #set($back = $Cores.HexToColor($Cores.CorBackground))
        background: rgb($back); 
        #end
        #set($um = $um + 1)        
         #end


         #set($quantidade = $model.Div1.Container.Background.Cores.Count())
        background: -moz-linear-gradient(${model.Div1.Container.Background.GrauContainer}deg,
        #foreach($Cor in $model.Div1.Container.Background.Cores)
         #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: -webkit-linear-gradie");
            WriteLiteral(@"nt(${model.Div1.Container.Background.GrauContainer}deg,
        #foreach($Cor in $model.Div1.Container.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

        #if($velocityCount == $quantidade)
             );
        #else
            ,
            #end

        #end  

        background: linear-gradient(${model.Div1.Container.Background.GrauContainer}deg,
        #foreach($Cor in $model.Div1.Container.Background.Cores)
        #set($Transparencia = $Cor.Transparencia / 10)
        rgba($Cor.HexToColor($Cor.CorBackground),$Transparencia.toString().replace(',','.')) ${Cor.Position}%

            #if($velocityCount == $quantidade)
             );
        #else
             ,
            #end

        #end  

        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#09e718',endColorstr='#1c8ea5',GradientType=1);
    }

</style>

#else

<style>
    .content {
 ");
            WriteLiteral(@"       background-color: $model.Div1.Container.Background.CorContainer;
    }

    #pagina$model.Pagina.Id {
        background-color: $model.Div1.Container.Background.CorContainer;
    }
</style>

#end


<style>

    img {
        margin: auto;
    }
    .Elemento {
        margin: auto;
    }
</style>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
